[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add options
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10

# Markers for categorizing tests
markers =
    unit: Unit tests
    integration: Integration tests that may require internet connection
    performance: Performance and benchmark tests
    slow: Slow tests (> 1 second)
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    security: Security-related tests
    api: API tests (for future phases)
    ui: UI tests (for future phases)

# Test output
console_output_style = progress

# Filters for warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    # Specific warnings to ignore
    ignore:.*imp module.*:DeprecationWarning
    ignore:.*distutils.*:DeprecationWarning

# Coverage settings (when using pytest-cov)
# Run with: pytest --cov=core --cov-report=html
[coverage:run]
source = core
omit =
    */tests/*
    */test_*
    */__init__.py
    */migrations/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

ignore_errors = True

[coverage:html]
directory = htmlcov